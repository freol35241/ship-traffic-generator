:py:mod:`trafficgen.utils`
==========================

.. py:module:: trafficgen.utils

.. autoapi-nested-parse::

   Utility functions that are used by several other functions.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   trafficgen.utils.m_pr_min_2_knot
   trafficgen.utils.knot_2_m_pr_min
   trafficgen.utils.m2nm
   trafficgen.utils.nm_2_m
   trafficgen.utils.deg_2_rad
   trafficgen.utils.rad_2_deg
   trafficgen.utils.convert_angle_minus_180_to_180_to_0_to_360
   trafficgen.utils.convert_angle_0_to_360_to_minus_180_to_180
   trafficgen.utils.calculate_position_at_certain_time



.. py:function:: m_pr_min_2_knot(speed_in_m_pr_min: float) -> float

   Convert ship speed in meters pr minutes to knot.

   Params:
       speed_in_m_pr_min: Ship speed in meters pr second

   :returns: **speed_in_knot**
   :rtype: Ship speed given in knots


.. py:function:: knot_2_m_pr_min(speed_in_knot: float) -> float

   Convert ship speed in knot to meters pr minutes.

   Params:
       speed_in_knot: Ship speed given in knots

   :returns: **speed_in_m_pr_min**
   :rtype: Ship speed in meters pr minutes


.. py:function:: m2nm(length_in_m: float) -> float

   Convert length given in meters to length given in nautical miles.

   Params:
       length_in_m: Length given in meters

   :returns: **length_in_nm**
   :rtype: Length given in nautical miles


.. py:function:: nm_2_m(length_in_nm: float) -> float

   Convert length given in nautical miles to length given in meters.

   Params:
       length_in_nm: Length given in nautical miles

   :returns: **length_in_m**
   :rtype: Length given in meters


.. py:function:: deg_2_rad(angle_in_degrees: float) -> float

   Convert angle given in degrees to angle give in radians.

   Params:
       angle_in_degrees: Angle given in degrees

   :returns: **angle given in radians**
   :rtype: Angle given in radians


.. py:function:: rad_2_deg(angle_in_radians: float) -> float

   Convert angle given in radians to angle give in degrees.

   Params:
       angle_in_degrees: Angle given in degrees

   :returns: **angle given in radians**
   :rtype: Angle given in radians


.. py:function:: convert_angle_minus_180_to_180_to_0_to_360(angle_180: float) -> float

   Convert an angle given in the region -180 to 180 degrees to an
   angle given in the region 0 to 360 degrees.

   Params:
       angle_180: Angle given in the region -180 to 180 degrees

   :returns: **angle_360**
   :rtype: Angle given in the region 0 to 360 degrees


.. py:function:: convert_angle_0_to_360_to_minus_180_to_180(angle_360: float) -> float

   Convert an angle given in the region 0 to 360 degrees to an
   angle given in the region -180 to 180 degrees.

   Params:
       angle_360: Angle given in the region 0 to 360 degrees

   :returns: **angle_180**
   :rtype: Angle given in the region -180 to 180 degrees


.. py:function:: calculate_position_at_certain_time(position: trafficgen.types.Position, speed: float, course: float, delta_time: float) -> trafficgen.types.Position

   Calculate the position of the ship at a given time based on initial position
   and delta time, and constand speed and course.

   Params:
       position: Initial ship position [m]
       speed: Ship speed [knot]
       course: Ship course [deg]
       delta_time: Delta time from now to the time new position is being calculated [minutes]

   :returns: **position{north, east}**
   :rtype: Dict, north and east position given in meters


